{
    "swagger": {
      "swagger": "2.0",
      "info": {
        "version": "2019-01-29T23:24:37Z",
        "title": "care-connect"
      },
      "schemes": [
        "https"
      ],
      "paths": {
      },
      "securityDefinitions": {
      },  
      "definitions": {
        "Empty": {
          "type": "object",
          "title": "Empty Schema"
        }
      }
    },
    "NON_SECURE_PATH": {
      "METHOD": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "parameters": [],
        "x-amazon-apigateway-integration": {
          "uri": "AWS_API_GATEWAY_INTEGRATION_URL",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "METHOD",
          "type": "http_proxy",
          "requestParameters": {}
        }
      }
    },
    "SECURE_PATH": {
      "METHOD": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "parameters": [],
        "security": [{}],
        "x-amazon-apigateway-integration": {
          "uri": "AWS_API_GATEWAY_INTEGRATION_URL",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "METHOD",
          "type": "http_proxy",
          "requestParameters": {}
        }
      }
    },
    "PARAMETER" :           
    {
      "name": "id",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "options": {
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "200 response",
          "schema": {
            "$ref": "#/definitions/Empty"
          },
          "headers": {
            "Access-Control-Allow-Origin": {
              "type": "string"
            },
            "Access-Control-Allow-Methods": {
              "type": "string"
            },
            "Access-Control-Allow-Headers": {
              "type": "string"
            }
          }
        }
      },
      "x-amazon-apigateway-integration": {
        "responses": {
          "default": {
            "statusCode": "200",
            "responseParameters": {
              "method.response.header.Access-Control-Allow-Methods": "'METHOD,OPTIONS'",
              "method.response.header.Access-Control-Allow-Headers": "'authorizer,clientTimeStamp,credential,idtoken,secure,Content-Type'",
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            }
          }
        },
        "passthroughBehavior": "when_no_match",
        "requestTemplates": {
          "application/json": "{\"statusCode\": 200}"
        },
        "type": "mock"
      }
    },
    "cognito-user-pool": {
      "type": "apiKey",
      "name": "idtoken",
      "in": "header",
      "x-amazon-apigateway-authtype": "cognito_user_pools",
      "x-amazon-apigateway-authorizer": {
        "providerARNs": [
          "AWS_COGNITO_USER_POOL_ID"
        ],
        "type": "cognito_user_pools"
      }
    }
  }